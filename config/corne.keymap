/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        HMR: HMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <150>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <40 41 39 38 37 36 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>;
        };

        backspace_or_delete: backspace_or_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_OR_DELETE";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        arrup_and_pgup: arrup_and_pgup {
            compatible = "zmk,behavior-mod-morph";
            label = "ARRUP_AND_PGUP";
            bindings = <&kp UP_ARROW>, <&kp PG_UP>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        arrdn_and_pgdn: arrdn_and_pgdn {
            compatible = "zmk,behavior-mod-morph";
            label = "ARRDN_AND_PGDN";
            bindings = <&kp DOWN_ARROW>, <&kp PAGE_DOWN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        arrlt_and_home: arrlt_and_home {
            compatible = "zmk,behavior-mod-morph";
            label = "ARRLT_AND_HOME";
            bindings = <&kp LEFT_ARROW>, <&kp HOME>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        arrrt_and_end: arrrt_and_end {
            compatible = "zmk,behavior-mod-morph";
            label = "ARRRT_AND_END";
            bindings = <&kp RIGHT_ARROW>, <&kp END>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        tg_wifi: tg_wifi {
            compatible = "zmk,behavior-hold-tap";
            label = "Toggle wifi";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <150>;
        };

        tg_bt: tg_bt {
            compatible = "zmk,behavior-hold-tap";
            label = "Toggle bluetooth";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <150>;
        };

        pwr_off: pwr_off {
            compatible = "zmk,behavior-hold-tap";
            label = "Power off";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <150>;
        };
    };

    macros {
        toggle_cmd: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(LA(C)))>, <&macro_press>;

            label = "Toggle cmd";
        };

        tg_fl_laucher: tg_flow_launcher {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(SPACE)>;
            label = "Toggle Flow Laucher";
        };
    };

    combos {
        compatible = "zmk,combos";

        middle_click {
            bindings = <&mkp MCLK>;
            key-positions = <2 4>;
            timeout-ms = <50>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | TAB  |  Q  |  W  |  E  |  R  |    T    |   |  Y  |  U   |  I  |  O  |  P  | ESC |
            // | CTRL |  A  |  S  |  D  |  F  |    G    |   |  H  |  J   |  K  |  L  |  ;  |  LWR/'   |
            // | SHFT |  Z  |  X  |  C  |  V  |    B    |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | GUI | LWR | ALT/ENT |   | HYPER/SPC | BKSP  | RSE |

            bindings = <
&kp TAB         &kp Q         &kp W         &kp E            &kp R            &kp T        &kp Y      &kp U        &kp I             &kp O         &kp P                 &backspace_or_delete
&kp CAPS        &HMR LSHFT A  &HMR LCTRL S  &HMR LEFT_WIN D  &HMR LEFT_ALT F  &kp G        &kp H      &HMR RALT J  &HMR RIGHT_WIN K  &HMR RCTRL L  &HMR RSHFT SEMICOLON  &kp SQT
&tg_fl_laucher  &kp Z         &kp X         &kp C            &kp V            &kp B        &kp N      &kp M        &kp COMMA         &kp DOT       &kp FSLH              &kp ESC
                                            &toggle_cmd      &sl 1            &kp ENTER    &kp SPACE  &sl 2        &kp PRINTSCREEN
            >;
        };

        layer_below {
            // -----------------------------------------------------------------------------------------
            // |      |  !  |  @  |  #  |  $  |    %     |   |  ^  |  &  |  *  |  (  |  )  |   \   |
            // |      |  1  |  2  |  3  |  4  |    5     |   |  -  |  =  |  `  |  [  |  ]  |  "|"  |
            // | SHFT |  6  |  7  |  8  |  9  |    0     |   |  _  |  +  |  ~  |  {  |  }  | RSHFT |
            //                     | GUI |     | ALT/ENT |   | HYPER/SPACE | BKSP |    |

            bindings = <
&kp GRAVE  &msc SCRL_LEFT   &mkp LCLK       &kp UP_ARROW    &mkp RCLK        &kp PIPE                &kp BACKSLASH          &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PLUS      &kp MINUS
&trans     &msc SCRL_RIGHT  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LEFT_BRACKET        &kp RIGHT_BRACKET      &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp ASTERISK  &kp SLASH
&kp LSHFT  &kp K_UNDO       &kp K_CUT       &kp K_COPY      &kp K_PASTE      &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ENTER     &tog 0
                                            &trans          &trans           &none                   &kp NUMBER_0           &kp PERIOD    &trans
            >;
        };

        layer_above {
            // -----------------------------------------------------------------------------------------
            // |       |  F1  |  F2  |  F3  |  F4  |  F5 |            |  F6  |  F7  |  F8  |  F9  |  F10  |   |
            // |       | Prev | Next | Vol - | Vol + | Play/Pause |   |      | LFT | DWN |  UP | RGT |     |     |
            // | BTCLR | BT1 | BT2 | BT3 | BT4 | BT5 |   |            |     |     |     |     |     |     |
            //                    |     |     |    |                  |     |     |     |

            bindings = <
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5        &kp F6          &kp F7             &kp F8            &kp F9             &kp F10          &kp F11            &kp F12
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp C_PREV         &kp C_PLAY_PAUSE  &kp C_NEXT         &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &kp K_MUTE
&trans      &trans        &trans        &trans        &trans        &trans          &kp LC(LS(LA(B)))  &kp LC(RS(W))     &kp LC(LA(LS(P)))  &trans           &trans             &tog 0
                                        &trans        &trans        &trans          &trans             &trans            &trans
            >;
        };
    };
};
